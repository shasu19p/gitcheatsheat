    
    #___________________________ git naming conventions____________________________________________
    Naming:
        - A. origin master is two separate things, master is a local branch and origin is a remote
        - B. origin/master is one thing, origin/master is a remote branch (which is a local copy of the branch named "master" on the remote named "origin")

    # ==============================================================================================    
    
    #_____________________________fetch master branch into local machine __________________________
    Fetch master from remote:
        fetch master from the remote origin.
        The master branch on origin will be fetched and the local copy will be named origin/master.
        
        example:
            $ git clone https://github.com/shasu19/openshift-cheatsheet.git
            $ consider there are more than one branch (master, integration branches etc)
            $ git fetch origin master
    checkout master: git checkout master
        merge origin/master into master:
            $ git merge origin/master
         push your new changes in master back to origin
            $ git push origin master
    # =====================================================================================================
    
    
    # =========== Creating git in local and then uploading some project ============
    commands sequence:
        - echo "# git-commands" >> README.md
        - git init
        - git add README.md
        - git commit -m "first commit"
        - git remote add origin https://github.com/shasu19/git-commands.git
        - git push -u origin master
        
    #===============================================================================
    
    ##
    ## ========== push an existing repository from the command line =================
    ##===============================================================================
    ## 
    push an existing repository from the command line:
        - git remote add origin https://github.com/shasu19/git-commands.git
        - git push -u origin master
        
    #===============================================================================

    #########################################################################################
    ## creating tags to some branch
    # Creating new tags for some branch
    # Whenever we feel, components are stable and we can create release tags for git branches.
    checkout branch for which need to create tag: git checkout master
    create tag command: git tag <tag_name>
    create tag with some descripted name: git tag -a APM-19.4_EA3 -m "Early access release stable release message"
    
    ## list tags commands
    list tag command1: git tag
    list tag command2: git show <tag_name>
    list tag command3: git tag -l "pattern_to_search_tag_names"
    
    # pushing local tag to remote origin
    # this is just like new branch push
    push tag to remote: git push origin <tag_name>
    
    
    #push all tags at once
    push tags to remote at once: >
        - git push --tags
        - git push origin --tags

    ## deleting tags
    delete tags: >
        - git tag -d <tag_name>
        - git tag --delete <tag_name>
    
    ## delete tags and push to origin
    delete tags and push to origin: >
        - git push origin -d <tag_name>
        - git push origin --delete <tag_name>
        - git push origin :<tag_name>
    
    Create a tag for old past commit command: git tag <tag_name> <reference_of_old_commit_check_sum_code>    
    
    ##### creating some branch in local from tag name
    Create a branch from git tag command: git checkout -b <new_branch_name> <tag_name>
    
    #==============================================================
    
    
    ## Create a new branch in local
    create branch in local: git checkout -b <new_branch_name>
    push to remote: git push (try this and some command will come and then execute that)
    next: it will display some details and command to execute to push to origin
    
    # ==================================================================
    
    ## Switch to new branch
    switch branch: git checkout <branch_name_to_switch>

    # ==================================================================

    ## Pull Remote Changes in Local:
    pulling changes: git pull

    ## Commit Changes to remote repository
    add changed files: git add <file_name>
    add all changed files: git add .
    
    ## commit with message
    commit changes: git commit -m “Message to git to commit changes”
    
    # push changes to remote repo
    push changes: git push

    ## checking differences between files
    differences in files: git diff <file_name>
    
    #==========================================================================

    Learning from Nicholas/Navin
  	-- commit particular checking
 
	couple of options:
 
	1. checkout dev. 'git co {sha_you_want}'. create branch in local env (it will honor current rev). push branch. Then, use pull request to merge into master.
 
	2. checkout dev and do a pull to update to latest. Perform 'git co master' to update branch. git pull to update. 'git merge --no-commit --no-ff {sha_of_dev_branch_you_want_to_commit}'. Look at the source in current working dir to see if all looks good. Then 'git commit' to commit changes into master.

	steps:
	git checkout dev
	git pull
	git checkout master
	git pull
	git merge --no-commit --no-ff --squash dev
	git merge --no-commit --no-ff --squash dev_sha_id
	git commit -m "commit message"
	git push



    


    
    
    

    
        
    
    












    
    
    








    
    


